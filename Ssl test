import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.net.HttpURLConnection;
import java.net.URL;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class FileManagerUtilityTests {

    @Mock
    private SSLHelper sslHelper;

    @Mock
    private HttpURLConnection mockHttpConnection;  // ✅ Ensure correct mocking

    @Mock
    private URL mockUrl;  // ✅ Mock URL correctly

    @InjectMocks
    private FileManagerUtility fileManagerUtility;

    @BeforeEach
    void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);

        // ✅ Ensure `openConnection()` returns our mocked HttpURLConnection
        when(mockUrl.openConnection()).thenReturn(mockHttpConnection);
    }

    @Test
    void testValidateArtifactoryLocation_Success() throws Exception {
        doNothing().when(sslHelper).disableSSLValidation();
        when(mockHttpConnection.getResponseCode()).thenReturn(HttpURLConnection.HTTP_OK);

        boolean result = fileManagerUtility.validateArtifactoryLocation("http://mock-url.com");

        System.out.println("Test Mocked Response Code: " + mockHttpConnection.getResponseCode());
        System.out.println("Test Result: " + result);

        verify(sslHelper, times(1)).disableSSLValidation();
        verify(mockHttpConnection, times(1)).setRequestMethod("GET");

        assertTrue(result, "Expected validation to return true for HTTP 200");
    }
}
