import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.net.HttpURLConnection;
import java.net.URL;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class FileManagerUtilityTests {

    @Mock
    private SSLHelper sslHelper;  // ✅ Mock SSLHelper correctly

    @InjectMocks
    private FileManagerUtility fileManagerUtility;  // ✅ Inject Mocks into FileManagerUtility

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);  // ✅ Required for proper mock injection
    }

    @Test
    void testValidateArtifactoryLocation_Success() throws Exception {
        // ✅ Ensure that when() is called on a mock
        doNothing().when(sslHelper).disableSSLValidation(); // ✅ Fix: Use doNothing() for void methods

        HttpURLConnection mockHttpConnection = mock(HttpURLConnection.class);
        when(mockHttpConnection.getResponseCode()).thenReturn(HttpURLConnection.HTTP_OK);

        URL mockUrl = mock(URL.class);
        when(mockUrl.openConnection()).thenReturn(mockHttpConnection);

        boolean result = fileManagerUtility.validateArtifactoryLocation("http://mock-url.com");

        verify(sslHelper, times(1)).disableSSLValidation();  // ✅ Ensure SSL validation is disabled
        assertTrue(result, "Validation should return true for HTTP 200");
    }
}
