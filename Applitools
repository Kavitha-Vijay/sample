using System;
using System.Threading.Tasks;
using Applitools;
using Applitools.Selenium;
using Applitools.Playwright;
using Microsoft.Playwright;

namespace PlaywrightApplitoolsDemo
{
    class Program
    {
        static async Task Main(string[] args)
        {
            // Initialize Applitools Eyes
            var eyes = new Eyes();
            eyes.ApiKey = "YOUR_APPLITOOLS_API_KEY"; // Replace with your Applitools API key

            // Set up Playwright
            var playwright = await Playwright.CreateAsync();
            var browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions { Headless = false });
            var context = await browser.NewContextAsync();
            var page = await context.NewPageAsync();

            try
            {
                // Initialize Applitools Eyes with Playwright
                var eyesDriver = new PlaywrightEyes(eyes, page);

                // Start the visual test
                eyes.Open(eyesDriver, "Playwright .NET App", "Home Page Test");

                // Navigate to the website
                await page.GotoAsync("https://example.com");

                // Take a screenshot and validate with Applitools
                eyes.CheckWindow("Home Page");

                // Close Eyes and get the results
                eyes.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
            finally
            {
                // Ensure browser and Eyes are properly closed
                await browser.CloseAsync();
                eyes.AbortIfNotClosed();
            }
        }
    }
}
