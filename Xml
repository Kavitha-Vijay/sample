using System;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Xml.Linq;

public class TestRun
{
    public string module { get; set; }
    public string package { get; set; }
    public string @class { get; set; } // "@" symbol is used to escape reserved keywords
    public string name { get; set; }
    public string duration { get; set; }
    public string status { get; set; }
    public string started { get; set; }
}

public class TestRuns
{
    public TestRun test_run { get; set; }
}

public class TestResult
{
    public TestRuns test_runs { get; set; }
}

public class Program
{
    public static void Main()
    {
        // Create an instance of TestResult and populate its properties
        TestResult testResult = new TestResult
        {
            test_runs = new TestRuns
            {
                test_run = new TestRun
                {
                    module = "/updatedModule",
                    package = "updatedPackage",
                    @class = "UpdatedHelloWorldTest",
                    name = "updatedTestOne",
                    duration = "5",
                    status = "Failed",
                    started = "1430919299999"
                }
            }
        };

        try
        {
            // Convert TestResult object to JSON string
            string json = JsonConvert.SerializeObject(testResult);

            // Deserialize JSON string to JObject
            JObject jsonObject = JObject.Parse(json);

            // Update values in the JObject
            jsonObject["test_runs"]["test_run"]["module"] = "/newModule";
            jsonObject["test_runs"]["test_run"]["package"] = "newPackage";
            jsonObject["test_runs"]["test_run"]["class"] = "NewHelloWorldTest";
            jsonObject["test_runs"]["test_run"]["name"] = "newTestOne";
            jsonObject["test_runs"]["test_run"]["duration"] = "10";
            jsonObject["test_runs"]["test_run"]["status"] = "Passed";
            jsonObject["test_runs"]["test_run"]["started"] = "1430919290000";

            // Convert JObject back to JSON string
            string updatedJson = jsonObject.ToString();

            // Convert JSON string to XML string
            string xml = JsonConvert.DeserializeXNode(updatedJson, "test_result").ToString();

            // Output the XML string
            Console.WriteLine(xml);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating JSON and converting to XML: {ex.Message}");
        }
    }
}
