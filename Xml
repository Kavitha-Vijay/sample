using System;
using System.Xml;
using Newtonsoft.Json;

public class Program
{
    public static void Main()
    {
        // JSON string
        string json = @"{
            ""test-field"": {
                ""type"": ""level"",
                ""value"": ""dummy""
            }
        }";

        try
        {
            // Convert JSON to XmlDocument
            XmlDocument xmlDocument = JsonConvert.DeserializeXmlNode(json, "Root");

            // Update the XML document
            XmlNode testFieldNode = xmlDocument.SelectSingleNode("/Root/test-field");
            if (testFieldNode != null)
            {
                // Update the attributes
                if (testFieldNode.Attributes != null)
                {
                    testFieldNode.Attributes["type"].Value = "newLevel";
                    testFieldNode.Attributes["value"].Value = "newValue";
                }
            }
            else
            {
                throw new InvalidOperationException("test-field node not found in the XML document.");
            }

            // Convert the updated XmlDocument to a string
            string updatedXml;
            using (var stringWriter = new System.IO.StringWriter())
            using (var xmlTextWriter = new XmlTextWriter(stringWriter))
            {
                xmlTextWriter.Formatting = Formatting.Indented; // optional: for pretty print
                xmlDocument.WriteTo(xmlTextWriter);
                updatedXml = stringWriter.ToString();
            }

            // Output the updated XML string
            Console.WriteLine(updatedXml);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error processing JSON to XML: {ex.Message}");
        }
    }
}
