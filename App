const { Eyes, Target, Configuration, ConsoleLogHandler } = require('@applitools/eyes-playwright');
const config = require('./applitools.config');

class VisualTestHelper {
  constructor() {
    this.isEnabled = config.isEnabled;
    if (!this.isEnabled) return;

    this.eyes = new Eyes();
    const eyesConfig = new Configuration();
    eyesConfig.setApiKey(config.apiKey);

    if (config.serverUrl) {
      eyesConfig.setServerUrl(config.serverUrl);
    }

    this.eyes.setConfiguration(eyesConfig);
    this.eyes.setLogHandler(new ConsoleLogHandler(true));
    this.viewport = config.viewport || { width: 800, height: 600 }; // Default viewport if not set
  }

  async initializeEyes(page, testName) {
    if (!this.isEnabled) return;

    await this.eyes.open(page, 'My App', testName, this.viewport);
  }

  async checkWindow(tag) {
    if (!this.isEnabled) return;

    await this.eyes.check(tag, Target.window());
  }

  async checkElement(element, tag) {
    if (!this.isEnabled) return;

    await this.eyes.check(tag, Target.region(element));
  }

  async closeEyes() {
    if (!this.isEnabled) return;

    await this.eyes.close();
  }

  async abortIfNotClosed() {
    if (!this.isEnabled) return;

    await this.eyes.abortIfNotClosed();
  }
}

module.exports = VisualTestHelper;
