using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

class CheckLambdaTestAccess
{
    static async Task Main()
    {
        string username = Environment.GetEnvironmentVariable("LT_USERNAME");
        string accessKey = Environment.GetEnvironmentVariable("LT_ACCESS_KEY");

        Console.WriteLine("Username: " + username);
        Console.WriteLine("AccessKey length: " + (accessKey?.Length ?? 0)); // avoid printing full key

        var authToken = Convert.ToBase64String(Encoding.ASCII.GetBytes($"{username}:{accessKey}"));
        var client = new HttpClient();
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", authToken);

        var response = await client.GetAsync("https://hub.lambdatest.com/wd/hub/status");

        Console.WriteLine($"Status Code: {response.StatusCode}");
        Console.WriteLine(await response.Content.ReadAsStringAsync());
    }
}






var ltOptions = new Dictionary<string, object>
{
    ["user"] = Environment.GetEnvironmentVariable("LT_USERNAME"),
    ["accessKey"] = Environment.GetEnvironmentVariable("LT_ACCESS_KEY"),
    ["build"] = "LambdaTestBuild",
    ["name"] = "Access Validation Test"
};

var options = new ChromeOptions
{
    PlatformName = "Linux",
    BrowserVersion = "latest"
};

options.AddAdditionalOption("LT:Options", ltOptions);

var driver = new RemoteWebDriver(
    new Uri("https://hub.lambdatest.com/wd/hub"), options);




using OpenQA.Selenium;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Chrome;

class Program
{
    static void Main(string[] args)
    {
        string username = Environment.GetEnvironmentVariable("LT_USERNAME") ?? "<your-username>";
        string accessKey = Environment.GetEnvironmentVariable("LT_ACCESS_KEY") ?? "<your-access-key>";

        var ltOptions = new Dictionary<string, object>
        {
            { "user", username },
            { "accessKey", accessKey },
            { "build", "C# Selenium Build" },
            { "project", "C# LambdaTest Demo" },
            { "name", "Sample LambdaTest Test" },
            { "platformName", "Windows 11" },
            { "browserName", "Chrome" },
            { "browserVersion", "latest" },
            { "selenium_version", "4.20.0" }
        };

        var options = new ChromeOptions();
        options.AddAdditionalOption("LT:Options", ltOptions);

        try
        {
            using var driver = new RemoteWebDriver(
                new Uri("https://hub.lambdatest.com/wd/hub"), options
            );

            driver.Navigate().GoToUrl("https://example.com");
            Console.WriteLine("Title: " + driver.Title);
        }
        catch (WebDriverException ex)
        {
            Console.WriteLine("WebDriver error: " + ex.Message);
        }
    }
}
